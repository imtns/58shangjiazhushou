<template>
    <view class='mod-upload'>
        <view class="main-body">
            <view class="main-title" wx:if="{{ showType === 'normal' }}">上传{{titleStatus[uploadtype-1]}}</view>
            <view class="main-body-flex" :class="{ 'main-boy-line': showType === 'normal' }">
                <view class="main-upload-order" :class="{ 'show-add': vm.length === 0 }" @tap='bindUploadImage' wx:if="{{ showType === 'order' }}">
                    <view class="inner-title" wx:if="{{ vm.length === 0 }}">添加图片</view>
                    <block wx:if="{{ showType === 'order' && vm.length > 0 }}">
                        <image class="image-preview" mode="aspectFill" src="{{ vm[0] }}"/>
                        <view class="replace-image">替换图片</view>
                    </block>
                </view>
                <block wx:if="{{ showType === 'normal' }}">
                    <view class="main-upload" @tap='bindUploadImage' wx:if="{{uploadtype=='1' && vm.length<maxCount-0}}"></view>
                    <view class="main-upload" @tap='bindUploadVideo' wx:if="{{uploadtype=='2' && vm.length<maxCount-0}}"></view>
                    <view class="main-show-image" wx:for='{{vm}}' wx:key='index'>
                        <image class="main-upload-image" data-index='{{index}}' src="{{item}}" @tap="bindPreviewImage({{index}})" wx:if="{{uploadtype==='1'}}"/>
                        <view class="main-upload-video" data-index='{{index}}' @tap="bindPlayVideo({{item}})" wx:else><image class="main-upload-video-arrow" src="https://img.58cdn.com.cn/lbg/shangjiaxcxht/zhushou/img/video-play.png"/></view>
                        <view class="main-del-image" hidden="{{loading}}" @tap.stop="onCancelImage" wx:if="{{showDelete}}"></view>
                    </view>
                </block>
            </view>
        </view>
    </view>
</template>
<script>
import wepy from 'wepy';
import { toastSync } from '../utils';

const host = 'https://yaofa.58.com';
export default class Uploader extends wepy.component {
    data = {
        uploading: false,
        vm: [],
        images: [],
        titleStatus: ['图片', '视频'],
    }
    props = {
        uploadtype: String,
        maxSize: String,
        maxCount: String,
        defaultImages: { // 默认图片
            type: Array,
            default: [],
        },
        showDelete: {
            type: Boolean,
            default: true,
        },
        uploadingImage: {
            type: String,
            default: 'https://img.58cdn.com.cn/lbg/shangjiaxcxht/zhushou/img/upimg_loading_1.gif',
        },
        uploadImageApi: {
            type: String,
            default: '/fileUpload',
        },
        uploadVideoApi: {
            type: String,
            default: '/wosFileUpload',
        },
        // normal 大图，order 预约组件中需要的样式
        showType: {
            type: String,
            default: 'normal',
        },
    }
    computed = {
        currentCount () {
            if (this.showType === 'order') {
                return 1;
            }

            const count = this.maxCount - this.vm.length;
            return count > 0 ? count : 0;
        },
    }
    watch = {
        defaultImages(v) {
            this.vm = v;
            this.$apply();
        },
    }
    methods = {
        async bindUploadImage () {
            if (this.uploading) {
                return;
            }

            const self = this;
            const { tempFilePaths } = await wepy.chooseImage({ count: this.currentCount, sizeType: 'compressed' });

            if (self.showType === 'order' && self.vm.length) {
                self.vm = [];
                self.images = [];
                self.$apply();
            }

            const start = this.data.vm.length || 0;
            const fileSize = tempFilePaths.length;

            let sfileset = [...self.vm];
            const simages = [...self.images];
            sfileset = self.batchAddArray(
                sfileset,
                fileSize,
                self.uploadingImage,
            );
            // 上传中图片
            self.uploading = true;
            self.vm = [...sfileset];
            // 触发图片更改事件
            self.$emit('changeimages', {
                uploading: self.uploading,
                images: self.images,
            });
            self.vm = [...sfileset];
            self.$apply();
            tempFilePaths.map(async (file, i) => {
                const [e, data] = await self.uploadImage(file);
                if (e) {
                    await toastSync(e);
                    sfileset.splice(start + i, 1); // 失败删除
                } else {
                    sfileset.splice(start + i, 1, file); // 成功替换
                    simages.push(data.content);
                }
                // 每张照片上传成功调用
                self.images = [...simages];
                self.vm = [...sfileset];
                // 所有图片上传完成
                console.log(file, i);
                if (fileSize - 1 === i) {
                    self.$emit('changeimages', {
                        uploading: false,
                        images: self.images,
                    });
                    self.uploading = false;
                }
                self.$apply();
                return file;
            });
        },
        async bindUploadVideo () {
            if (this.uploading) return;
            const self = this;
            const start = this.data.vm.length || 0;
            let { tempFilePath } = await wepy.chooseVideo();
            const tempFilePaths = [tempFilePath];
            tempFilePath = null;
            console.log(tempFilePaths);
            const fileSize = tempFilePaths.length;
            let sfileset = [...self.vm];
            const simages = [...self.images];
            sfileset = self.batchAddArray(
                sfileset,
                fileSize,
                self.uploadingImage,
            );
            // 上传中图片
            self.uploading = true;
            self.vm = [...sfileset];
            // 触发图片更改事件
            self.$emit('changeimages', {
                uploading: self.uploading,
                images: self.images,
            });
            self.vm = [...sfileset];
            self.$apply();
            tempFilePaths.map(async (file, i) => {
                const [e, data] = await self.uploadVideo(file);
                if (e) {
                    await toastSync(e);
                    sfileset.splice(start + i, 1); // 失败删除
                } else {
                    sfileset.splice(start + i, 1, file); // 成功替换
                    simages.push(data.content);
                }
                // 每张照片上传成功调用
                self.images = [...simages];
                self.vm = [...sfileset];
                // 触发图片更改事件
                self.$emit('changeimages', {
                    uploading: false,
                    images: self.images,
                });
                self.$apply();
                // 所有图片上传完成
                if (fileSize - 1 === i) {
                    self.uploading = false;
                    self.$apply();
                }
                return file;
            });
        },
        onCancelImage (index) {
            if (this.data.uploading) return;
            const sfileset = this.data.vm;
            const simages = this.data.images;
            sfileset.splice(index, 1);
            simages.splice(index, 1);
            this.vm = [...sfileset];
            this.images = [...simages];
            this.$apply();
            // 触发图片更改事件
            this.$emit('changeImages', {
                images: this.data.images,
            });
        },
        bindPlayVideo (url) {
            if (url) {
                wepy.navigateTo({
                    url: `/pages/VideoPlay?url=${url}`,
                });
            }
        },
        bindPreviewImage (current) {
            wepy.previewImage({
                current,
                urls: this.vm,
            });
        },
    }
    uploadImage (file) {
        return new Promise((resolve) => {
            wepy.uploadFile({
                url: host + this.uploadImageApi,
                filePath: file,
                name: 'content',
            }).then((response) => {
                try {
                    console.log(response);
                    const res = JSON.parse(response.data);
                    const { state, msg, data } = res;
                    if (state === 100) {
                        resolve([null, data]);
                    } else {
                        resolve([msg]);
                    }
                    console.log(res);
                } catch (e) {
                    console.log(e);
                    resolve([e]);
                }
            }).catch((e) => {
                console.log(e);
                const { errMsg } = e;
                resolve([errMsg]);
            });
        });
    }
    uploadVideo (file) {
        return new Promise((resolve) => {
            wepy.uploadFile({
                url: host + this.uploadVideoApi,
                filePath: file,
                name: 'content',
            }).then((response) => {
                try {
                    console.log(response);
                    const res = JSON.parse(response.data);
                    const { state, msg, data } = res;
                    if (state === 100) {
                        resolve([null, data]);
                    } else {
                        resolve([msg]);
                    }
                    console.log(res);
                } catch (e) {
                    console.log(e);
                    resolve([e]);
                }
            }).catch((e) => {
                console.log(e);
                const { errMsg } = e;
                resolve([errMsg]);
            });
        });
    }
    batchAddArray (array, size, value) {
        const ret = array;
        if (ret instanceof Array) {
            for (let i = 0; i < size; i += 1) {
                ret.push(value);
            }
        }
        return ret;
    }
    onLoad () {
        this.vm = [];
        this.images = [];
        this.uploading = false;
        this.$apply();
    }
}
</script>
<style lang="scss">
/* 上传区 */
@import '../css/regist.scss';

.main-upload-order {
    width: 120rpx;
    height: 120rpx;
    border-radius: 8px;
    margin-bottom: 20rpx;
    overflow: hidden;
    position: relative;

    &.show-add {
        border: 1px solid #CCCCCC;
        background: url('/order-edit-add.png') no-repeat;
        background-size: 60rpx 60rpx;
        background-position: 30rpx 14rpx;
    }
    .inner-title {
        margin: 84rpx 20rpx 8rpx;
        font-size: 20rpx;
        color: #999;
        white-space: nowrap;
    }
    .image-preview {
        width: 120rpx;
        height: 120rpx;
    }
    .replace-image {
        width:100%;
        height: 45rpx;
        position: absolute;
        bottom: 0;
        color: #fff;
        font-size: 24rpx;
        letter-spacing: .36rpx;
        background: rgba(0,0,0,0.50);
        box-shadow: 2rpx 6rpx 6rpx 0 rgba(213,219,255,0.50);
        text-align:center;
        line-height:45rpx;
    }
}
.uploadInfo {
    padding-bottom: 70rpx;
    .article {
        padding: 30rpx;
        background: white;
        margin-bottom: 20rpx;
        border-top: 1rpx solid #e7e7e7;
        .title {
            height: 86rpx;
            line-height: 86rpx;
            display: flex;
            justify-content: space-between;
            .text {
                font-size: 30rpx;
                color: #999999;
            }
            .action {
                font-size: 30rpx;
                color: #4e88ff;
            }
        }
        .inputArea {
            textarea {
                width: 100%;
                height: 202rpx;
            }
            .numTip {
                padding-top: 20rpx;
                font-size: 24rpx;
                color: #cccccc;
                text-align: right;
            }
        }
    }
    .main-upload-video {
        width: 160rpx;
        height: 160rpx;
        border-radius: 2rpx;
        background: rgba(0, 0, 0, 0.8);
        position: relative;
        .main-upload-video-arrow {
            width: 65rpx;
            height: 65rpx;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 2;
        }
    }
}
</style>
