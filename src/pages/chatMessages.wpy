<template>
    <view class="chatMessages">
        <repeat wx:if="{{contactList.length > 0}}" for="{{contactList}}" key="index" index="index" item="item">
            <view class="message_box"  @tap="toChat" data-item="{{item}}">
                <view class="message_header" style="background:url(http://pic1.58cdn.com.cn{{item.portrait || 'http://pic1.58cdn.com.cn/bizmp/n_v285d6a16d725a446694db35df23c9db24.png'}}?=690'}}) no-repeat center">
                    <view class="message_tips" wx:if="{{item.unReadCount > 0}}">{{item.unReadCount}}</view>
                </view>
                <view class="message_info">
                    <view class="chat_name">{{item.nickName}}</view>
                    <view class="chat_info">{{item.content}}</view>
                    <!-- <view class="chat_info" wx:if="{{item.recentMsgs[item.recentMsgs.length - 1].type == 0}}">{{item.recentMsgs[item.recentMsgs.length - 1].content}}</view>
                    <view class="chat_info" wx:if="{{item.recentMsgs[item.recentMsgs.length - 1].type == 1}}">[图片]</view> -->
                    <view class="chat_time">{{item.sendTime}}</view>
                </view>
            </view>
        </repeat>
        <view wx:if="{{contactList.length == 0}}">
            <view class="empty-wrap">
                <image class="img-no-data" src="https://static.58.com/lbg/shangjiaxcxht/zhushou/img/chatMessages_empty.png"/>
                <view class="txt-no-data">暂时没有聊天消息哦</view>
                <view class="txt-no-data second">去分享名片可获得更多商机</view>
            </view>
        </view>  
    </view>
</template>

<script>
import wepy from 'wepy';
// import { CHAT_CONTACT_LIST } from '../utils/url';
// import { post } from '../utils/ajax';
import { globalData, setTabBar } from '../utils/globalData';
import { pubsub } from '../utils/IM/pubsub';
import { formatDateTimeLocal } from '../utils/dateFomate';
import { CHAT_CONTACT_LIST } from '../utils/url';
import { get } from '../utils/ajax';
import { getUid, SendClickLog } from '../utils/maidian';


export default class chatMessages extends wepy.page {
    config = {
        navigationBarTitleText: '消息',
    }
    data = {
        contactList: [],
    }
    methods = {
        toChat(e) {
            const { contactId, nickName, unReadCount } = e.currentTarget.dataset.item;
            const { unReadCount: totalCount } = globalData.chat;
            if (unReadCount) {
                const text = totalCount - unReadCount;
                setTabBar(text);
            }
        toChat(contact, chatWith) {
            SendClickLog('wxf03e52adc4b13448', getUid(), '{}', 'sjzh_click_chatMessages_toChat');
            console.log('*****', contact, chatWith);
            wepy.navigateTo({
                url: `wechat/chat/chat?contact=${contactId}&nickName=${nickName}`,
            });
        },
    }
    onLoad () {
        console.log('onload');
    }
    async onShow () {
        const { token = '', contactList = [] } = globalData.chat;
        console.error('contactList', contactList);
        if (!token) {
            return;
        }
        const { data } = await get(CHAT_CONTACT_LIST, {
            token,
        });
        console.log(data);
        this.contactList = data;
        this.$apply();

        this.unreadMsgs();
    }

    unreadMsgs() {
        const { contactList } = this;
        contactList.forEach((msg, index) => {
            const { contactId } = msg;
            pubsub.subscribe(contactId, (...props) => {
                const { type, content, sendTime } = props[0];
                const { unReadCount } = msg;
                let count;
                if (unReadCount === 0 || unReadCount === '0') {
                    count = 1;
                } else {
                    count = Number(unReadCount) + 1;
                }
                console.error('msg', unReadCount, contactId, msg);
                const newMsg = Object.assign(msg, {
                    lastType: type,
                    content: type === 1 ? '[图片]' : content,
                    sendTime: formatDateTimeLocal(sendTime),
                    unReadCount: count,
                });
                const { contactList: newList } = this;
                newList.splice(index, 1);
                newList.unshift(newMsg);
                console.error('newMsg', newMsg, formatDateTimeLocal(sendTime));
                this.contactList = newList;
                this.$apply();
            });
        });
    }
}
</script>

<style lang="scss">
.chatMessages{
    .img-no-data {
        display: block;
        width: 180rpx;
        height: 180rpx;
        margin: 200rpx auto 20rpx;
    }
    .txt-no-data {
        line-height: 88rpx;
        text-align: center;
        font-size: 30rpx;
        color: #ccc;
    }
    .second{
        line-height: 10rpx;
    }
    .message_box{
        padding: 35rpx 30rpx;
        background: white;
        height: 160rpx;
        width: 100%;
        display: flex;
        flex-direction: row;
        border: 1rpx solid #F3F3F3;
        border-left: 0;
        border-right: 0;
        border-top: 0;
        .message_header{
            width: 90rpx;
            height: 90rpx;
            background-size: contain !important;
            border-radius: 100%;
            position: relative;
            .message_tips{
                position: absolute;
                width: 36rpx;
                height: 36rpx;
                top: -10rpx;
                right: -12rpx;
                background: #FF552E;
                line-height: 36rpx;
                font-size: 20rpx;
                color: #FFFFFF;
                border-radius: 100%;
                text-align: center;
            }
        }
        .message_info{
            flex: 1;
            padding-left: 30rpx;
            position: relative;
            overflow: hidden;
            .chat_name{
                font-size: 34rpx;
                color: #000000;
                line-height: 55rpx;
            }
            .chat_info{
                font-size: 28rpx;
                color: #A8A8A8;
                overflow: hidden;
                text-overflow:ellipsis;
                white-space: nowrap;
            }
            .chat_time{
                position: absolute;
                top: 0;
                right: 0;
                font-size: 24rpx;
                color: #999999;
            }
        }
    }
}
</style>