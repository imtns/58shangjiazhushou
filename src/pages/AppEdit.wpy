<template>
    <view class="appedit-container" hidden="{{loading}}">
        <view class="appedit-header" @tap="setLogo" wx:if="{{form.app_type==1 || !form.headImg}}">
            <text class="appedit-form-label">上传小程序标志</text>
            <image class="appedit-form-logo" mode="aspectFill" src="{{logoUrl}}" />
            <text class="appedit-form-arrow"></text>
        </view>
        <view class="appedit-header" wx:else>
            <text class="appedit-form-label">上传小程序标志</text>
            <image class="appedit-form-logo" mode="aspectFill" src="{{logoUrl}}" />
        </view>
        <view class="appedit-content-list">
            <view class="appedit-content-list-item">
                <text class="appedit-form-label">小程序名称</text>
                <input class="appedit-form-input" type="text" @input="setAppName" placeholder="提交后优享小程序才可修改" placeholder-class="appedit-form-placeholder" maxlength="30" confirm-type="done"
                value="{{form.nickName}}" wx:if="{{form.app_type==1}}"/>
                <view class="appedit-form-appname appedit-form-placeholder" type="text" wx:else>{{form.nickName}}</view>
            </view>
            <view class="appedit-content-list-item">
                <text class="appedit-form-label">联系电话</text>
                <input class="appedit-form-input" maxlength='11' type="number" @input="setMobile" placeholder="请输入" placeholder-class="appedit-form-placeholder" value="{{form.telphone}}"/>
            </view>
            <!-- 同镇用户所属行业只可编辑一次，mpSource:3 代表同镇，所属行业已编辑 -->
            <view class="appedit-content-list-item"
             wx:if="{{!cateEditable}}">
                <text class="appedit-form-label">所属行业</text>
                <view class="appedit-form-cate">
                    {{ form.cate1Name+' '+form.cate2Name+' '+form.cate3Name }}
                </view>
                <text class="appedit-form-arrow"></text>
            </view>
            <!-- <navigator url="/pages/CateSelector?cate1={{form.cate1}}&cate2={{form.cate2}}&cate3={{form.cate3}}" wx:else> -->
            <navigator url="/pages/multiSelector?type=trade" wx:else>
                <view class="appedit-content-list-item">
                    <text class="appedit-form-label">所属行业</text>
                    <view class="appedit-form-cate">
                        <block wx:if="{{form.cate1Name}}">
                            {{ form.cate1Name+' '+form.cate2Name+' '+form.cate3Name }}
                        </block>
                        <block wx:else>
                            请选择
                        </block>
                    </view>
                    <text class="appedit-form-arrow"></text>
                </view>
             </navigator>
            <picker mode="multiSelector" @change="setCity" @columnchange="bindCity" range="{{areas}}" range-key="localName" value="{{selCityIndex}}">
                <view class="appedit-content-list-item">
                    <text class="appedit-form-label">小程序城市</text>
                    <view class="appedit-form-picker" wx:if="{{form.city}}">
                        {{form.provinceName}} {{form.cityName}}
                    </view>
                    <view class="appedit-form-picker-placeholder" wx:else>
                        请选择
                    </view>
                </view>
            </picker>
            <view class="appedit-content-list-item appedit-content-list-item-noborder" @tap="setLocation">
                <text class="appedit-form-label-address">小程序具体地点</text>
                <view class="appedit-form-cate address">
                    <text class="appedit-form-placeholder" wx:if="{{ !form.address }}">请选择</text>
                </view>
                <text class="appedit-form-arrow address"></text>
            </view>
            <view class="appedit-content-list-item appedit-content-list-item-noborder address-detail" wx:if="{{ form.address }}">
                <textarea
                    name=""
                    id=""
                    cols="30"
                    rows="10"
                    class="appedit-form-input-addressdetail"
                    placeholder="请输入"
                    placeholder-class="appedit-form-placeholder"
                    @input="setDetailAdress"
                    value="{{form.address}}">
                </textarea>
            </view>
        </view>
        <!-- <view class="appedit-map">
            <map id="map"  class="appedit-map-in" longitude="{{longitude}}" latitude="{{latitude}}"
             scale="14" markers="{{markers}}"></map>
        </view> -->
        <view class="appedit-submit submit-enable" @tap="bindSave" wx:if="{{enableSave}}">保存</view>
        <view class="appedit-submit" @tap="bindSave" wx:else>保存</view>
    </view>
</template>

<script>
import wepy from 'wepy';
import { picSrcDomain, filteremoji, toast, globalService, alertP, getNetStatus } from '../utils';
import { get } from '../utils/ajax';
import Mixin from '../mixin';
import { SendClickLog } from '../utils/maidian';


const host = 'https://yaofa.58.com';
const uploadApi = `${host}/fileUpload`;
const provinceApi = '/local/provinces';
const cityApi = '/local/citys/';
const appinfoApi = '/mplogic/get';
const saveAppApi = '/mplogic/modifympinfo';

export default class AppEdit extends wepy.page {
    mixins = [Mixin]
    config = {
        navigationBarTitleText: '小程序编辑',
    }
    data = {
        logoUrl: '',
        loading: true,
        mpid: '',
        areas: [[], []],
        selCityIndex: [0, 0],
        markerId: 0,
        form: {
            city: '1',
            province: '5001',
        },
        tempLogo: '',
        cateEditable: true, // 所属行业是否可以编辑
    }
    computed = {
        enableSave () {
            return !!(this.form.nickName && this.form.headImg
                && this.form.telphone && this.form.city && this.form.address);
        },
        markers () {
            const markerId = this.markerId + 1;
            return [{
                iconPath: '/pages/assets/marker.png',
                id: markerId,
                latitude: this.form.addressLatitude || '',
                longitude: this.form.addressLongitude || '',
                width: 22,
                height: 32,
            }];
        },
        longitude () {
            return this.form.addressLongitude;
        },
        latitude () {
            return this.form.addressLatitude;
        },
    }

    methods = {
        async bindCity (e) {
            const { column, value } = e.detail;
            if (column === 1) {
                return;
            }
            try {
                const { dispLocalID } = this.areas[0][value];
                const { data } = await get(cityApi + dispLocalID);
                this.areas = [this.areas[0], data];
                this.$apply();
            } catch (err) {
                this.toast(err.message);
            }
        },
        setCity (e) {
            const arr = e.detail.value;
            const cityIdx = arr[1] && 0;
            const province = this.areas[0][arr[0]];
            const city = this.areas[1][cityIdx];
            this.selCity = [province.localName, city.localName];
            this.updateForm({
                province: province.dispLocalID,
                provinceName: province.localName,
                city: city.dispLocalID,
                cityName: city.localName,
            });
        },
        async setLogo () {
            try {
                const netStatus = await getNetStatus();

                if (netStatus === 0) {
                    toast('无网络');
                    return;
                }

                const { tempFilePaths } = await wepy.chooseImage({
                    count: 1,
                    sizeType: 'compressed ',
                });
                const { confirm } = await alertP('是否裁剪图片？', '提示');

                if (confirm) {
                    // 去裁剪
                    wepy.navigateTo({
                        url: `/pages/cropper?url=${tempFilePaths[0]}&ratio=1,1`,
                    });
                } else {
                    this.uploadLogo(tempFilePaths[0]);
                }
            } catch (e) {
                console.log(e);
            }
        },
        setAppName (e) {
            let nickName = e.detail.value;
            nickName = filteremoji(nickName);
            this.updateForm({ nickName });
            return {
                value: nickName,
            };
        },
        setMobile (e) {
            const telphone = e.detail.value;
            this.updateForm({ telphone });
        },
        async setLocation () {
            SendClickLog('sjzh_click_editapp_location');
            const { address, latitude, longitude } = await wepy.chooseLocation();
            this.updateForm({ address, addressLatitude: latitude, addressLongitude: longitude });
        },
        setDetailAdress (e) {
            let address = e.detail.value;
            address = filteremoji(address);
            this.updateForm({ address });
            return {
                value: address,
            };
        },
        async bindSave () {
            const { form } = this.data;
            const verify = await this.verify();
            if (!verify) return;
            const sendData = {
                mpid: this.mpid, // 小程序id
                logo: form.headImg, // 小程序logo 只有优享小程序能改
                telphone: form.telphone, // 电话
                mpname: form.nickName, // 小程序名称 只有优享小程序能改
                privince: form.province,
                city: form.city, // 城市
                address: form.address, // 地址
                lat: form.addressLatitude, // 纬度
                lnt: form.addressLongitude, // 经度
                cate1: form.cate1, // 所属行业第一级
                cate2: form.cate2, // 所属行业第二级
                cate3: form.cate3, // 所属行业第三级
            };
            console.log(sendData);
            try {
                await get(saveAppApi, sendData);
                wepy.navigateBack();
            } catch (err) {
                this.toast(err.message);
            }
        },
    }

    async uploadLogo(tempPath) {
        try {
            const response = await wepy.uploadFile({
                url: uploadApi,
                filePath: tempPath,
                name: 'content',
            });
            const res = JSON.parse(response.data);
            const { state, msg, data } = res;
            if (state === 100) {
                this.tempLogo = tempPath;
                this.updateForm({ headImg: data.content });
            } else {
                this.toast(msg);
            }
        } catch ({ errMsg }) {
            this.toast(errMsg);
        }
    }

    async onLoad (options) {
        const mpid = options.mpid || wepy.getStorageSync('current_mpid');
        if (!mpid) {
            wepy.navigateBack();
        }
        this.mpid = mpid;
        await this.getAppInfo(this.mpid);
        this.recordFirstCateStatus(this.form);
        await this.getLocation();
        await this.getProvinces();
        this.defaultSelCityIndex();
    }
    onShow () {
        if (globalService.get('afterCrop')) {
            globalService.set('afterCrop', false);
            const url = globalService.get('cropperUrl');
            this.logoUrl = picSrcDomain() + url;
            this.form.headImg = url;
        }
        this.updateCateChoice();
    }
    // 记录页面加载是所属行业类别编辑状态
    // 如果小程序属于同镇mpSource= 3且所属行业cate2为空则可以编辑
    // 或者mpSource!==3则可以编辑
    recordFirstCateStatus (appInfo) {
        const { mpSource, cate2 } = appInfo;
        console.log('mpSource', mpSource, 'cate2', cate2);
        this.cateEditable = !(mpSource && mpSource.toString() === '3');
    }
    // 更新所属行业类别
    updateCateChoice() {
        const {
            cate1 = '',
            cate1Name = '',
            cate2 = '',
            cate2Name = '',
            cate3 = '',
            cate3Name = '',
        } = globalService.get('multiSelector');

        // 检查
        if ([cate1, cate2, cate3].every(v => typeof v !== 'number')) {
            return;
        }

        this.updateForm({
            cate1,
            cate1Name,
            cate2,
            cate2Name,
            cate3,
            cate3Name,
        });
    }
    // updateCateChoice () {
    //     if (!this.$parent.globalData || !this.$parent.globalData.cateChooice) return;
    //     const form = {};
    //     console.log('cateChooice0', this.$parent.globalData.cateChooice);
    //     // 从所属类目值选择页面返回重新赋值
    //     const cateChooice = (this.$parent.globalData && this.$parent.globalData.cateChooice) ?
    //         this.$parent.globalData.cateChooice : [{}, {}, {}];
    //     console.log('cateChooice1', cateChooice);
    //     cateChooice.map((item, index) => {
    //         form[`cate${index + 1}`] = item.cateId || '';
    //         form[`cate${index + 1}Name`] = item.name || '';
    //         return item;
    //     });
    //     // 更新完成删除全局所属类目字段cateChooice
    //     this.$parent.globalData
    //         && this.$parent.globalData.cateChooice
    //         && (this.$parent.globalData.cateChooice = undefined);
    //     this.updateForm(form);
    // }
    defaultSelCityIndex () {
        const { city, province } = this.form;
        let pIndex = 0;
        let cIndex = 0;
        let item;
        if (province) {
            for (let i = 0, len = this.areas[0].length; i < len; i += 1) {
                item = this.areas[0][i];
                if (item.dispLocalID === province) {
                    pIndex = i;
                    break;
                }
            }
        }
        if (city) {
            for (let i = 0, len = this.areas[1].length; i < len; i += 1) {
                item = this.areas[1][i];
                if (item.dispLocalID === province) {
                    cIndex = i;
                    break;
                }
            }
        }
        this.selCityIndex = [pIndex, cIndex];
        this.updateForm({
            city: this.areas[1][cIndex].dispLocalID,
            cityName: this.areas[1][cIndex].localName,
            province: this.areas[0][pIndex].dispLocalID,
            provinceName: this.areas[0][pIndex].localName,
        });
    }

    updateForm (data) {
        const res = data;
        const { form } = this.data;
        // 头像
        if (res.headImg === '' || res.headImg) {
            let { headImg = 'https://pic8.58cdn.com.cn/bizmp/n_v285d6a16d725a446694db35df23c9db24.png?w=72&h=72' } = res;
            headImg = this.tempLogo || headImg;
            if (headImg.indexOf('http') < 0 && headImg.indexOf('file:') < 0) {
                headImg = `${picSrcDomain() + headImg}?w=72&h=72`;
            }
            this.logoUrl = headImg;
        }
        // 经纬度，过滤空赋值
        if (res.addressLatitude !== undefined && res.addressLatitude === '') {
            delete res.addressLatitude;
            delete res.addressLongitude;
        }
        this.form = Object.assign({}, form, { ...res });
        this.$apply();
    }
    async getProvinces () {
        try {
            const { data: data1 } = await get(provinceApi);
            const province = this.form.province || '5001';
            const { data: data2 } = await get(cityApi + province);
            console.log('provinces', data1, 'citys', data2);
            this.areas = [data1, data2];
            this.loading = false;
            this.$apply();
        } catch (err) {
            this.toast(err.message);
        }
    }
    async getLocation () {
        const { latitude, longitude } = await wepy.getLocation({ type: 'wgs84' });
        if (this.form.addressLatitude) return;
        this.updateForm({ addressLatitude: latitude, addressLongitude: longitude });
    }
    async getAppInfo (mpid) {
        try {
            const { data } = await get(`${appinfoApi}/${mpid}`);
            this.updateForm({ ...data });
        } catch (err) {
            this.toast(err.message);
        }
    }
    toast (...params) {
        const [title, duration = 2000] = params;
        return wepy.showToast({
            title,
            icon: 'none',
            duration,
        });
    }
    async verify () {
        const regPhone = /^1[3456789][0-9]{9}$/;
        const { form } = this.data;
        if (!form.headImg) {
            this.toast('请完善信息');
            return false;
        }
        if (!form.nickName) {
            this.toast('输入小程序名称');
            return false;
        }
        if (form.nickName.length < 4) {
            this.toast('小程序名称不得小于4个字');
            return false;
        }
        if (!form.telphone) {
            this.toast('输入联系电话');
            return false;
        }
        if (form.telphone.length < 11 && !regPhone.test(form.telphone)) {
            await toast('手机号不正确');
            return false;
        }
        if (!form.city) {
            this.toast('选择城市');
            return false;
        }
        if (!form.address) {
            this.toast('输入详情地址');
            return false;
        }
        // 所属行业至少选择两项
        if ((!form.cate1 || !form.cate2) && form.mpSource.toString() !== '3') {
            this.toast('所属行业至少选择两项');
            return false;
        }
        return true;
    }
}
</script>

<style lang="scss">
.appedit-container {
    box-sizing: border-box;
    background: #f6f6f6;
    width: 100vw;
    height: 100vh;
    padding: 20rpx 0 30rpx;
    .appedit-header {
        height: 110rpx;
        margin-bottom: 38rpx;
        background: #fff;
        padding: 0 30rpx;
        &::after {
            display: inline-block;
            content: '';
            width: 0;
            height: 110rpx;
            line-height: 110rpx;
            vertical-align: middle;
        }
        .appedit-form-label {
            font-family: PingFangSC-Regular;
            font-size: 30rpx;
            color: #999999;
            vertical-align: middle;
        }
        .appedit-form-logo {
            margin-left: 364rpx;
            width: 72rpx;
            height: 72rpx;
            vertical-align: middle;
            border-radius: 50%;
        }
        .appedit-form-arrow {
            display: inline-block;
            content: '';
            width: 15rpx;
            height: 25rpx;
            vertical-align: middle;
            margin-left: 25rpx;
            background: url('https://static.58.com/lbg/mengchong/image/icon/arrow-right.png')
                no-repeat;
            background-size: 100%;
        }
    }
    .appedit-content-list {
        padding: 0 30rpx;
        background: #fff;
        .appedit-content-list-item {
            height: 90rpx;
            border-bottom: 2rpx solid #f3f3f3;
            &::after {
                display: inline-block;
                content: '';
                width: 0;
                height: 90rpx;
                line-height: 90rpx;
                vertical-align: middle;
            }
            .appedit-form-label {
                display: inline-block;
                width: 150rpx;
                font-family: PingFangSC-Regular;
                font-size: 30rpx;
                color: #999999;
                vertical-align: middle;
            }
            .appedit-form-placeholder {
                color: #ccc;
            }
            .appedit-form-input,
            .appedit-form-picker,
            .appedit-form-appname,
            .appedit-form-picker-placeholder {
                margin-left: 144rpx;
                display: inline-block;
                width: 396rpx;
                font-family: PingFangSC-Regular;
                font-size: 30rpx;
                color: #333333;
                text-align: right;
                vertical-align: middle;
            }
            .appedit-form-cate {
                margin-left: 40rpx;
                display: inline-block;
                width: 460rpx;
                overflow: hidden;
                white-space: nowrap;
                font-family: PingFangSC-Regular;
                font-size: 30rpx;
                color: #333333;
                text-align: right;
                vertical-align: middle;
            }
            .appedit-form-cate.address {
                width: 392rpx;
                margin-left: 52rpx;
            }
            .appedit-form-arrow {
                display: inline-block;
                content: '';
                width: 15rpx;
                height: 25rpx;
                vertical-align: middle;
                margin-left: 25rpx;
                background: url('https://static.58.com/lbg/mengchong/image/icon/arrow-right.png')
                    no-repeat;
                background-size: 100%;
            }
            .appedit-form-arrow.address {
                margin-left: 20rpx;
            }
            .appedit-form-appname {
                overflow: hidden;
                white-space: nowrap;
                text-overflow: ellipsis;
            }
            .appedit-form-picker-placeholder {
                color: #ccc;
            }
            .appedit-form-label-address {
                @extend .appedit-form-label;
                width: 210rpx;
            }
            .appedit-form-btn-location {
                display: inline-block;
                margin-left: 392rpx;
                font-family: PingFangSC-Regular;
                font-size: 30rpx;
                color: #4e88ff;
                &::before {
                    display: inline-block;
                    content: '';
                    width: 24rpx;
                    height: 30rpx;
                    background: url('https://img.58cdn.com.cn/lbg/shangjiaxcxht/zhushou/img/icon_location.png')
                        no-repeat top left;
                    background-size: 100%;
                    margin-right: 4rpx;
                    vertical-align: -4rpx;
                }
            }
            .appedit-form-input-addressdetail {
                display: block;
                width: 100%;
                height: 137rpx;
                padding-left: 0;
                text-indent: 0;
                font-family: PingFangSC-Regular;
                font-size: 30rpx;
                color: #333333;
            }
        }
        .appedit-content-list-item.address-detail {
            height: 137rpx;
        }
        .appedit-content-list-item-noborder {
            border: none;
        }
    }
    .appedit-map {
        display: block;
        height: 360rpx;
        .appedit-map-in {
            display: block;
            width: 100%;
            height: 360rpx;
        }
    }
    .appedit-submit {
        width: 690rpx;
        line-height: 94rpx;
        background: #cccccc;
        border-radius: 4rpx;
        font-family: PingFangSC-Regular;
        font-size: 32rpx;
        color: #ffffff;
        text-align: center;
        position: fixed;
        bottom: 65rpx;
        left: 30rpx;
    }
    .submit-enable {
        background: #4e88ff;
    }
}
</style>