<template>
    <view class="spread-panel">
        <!-- 背景覆盖 -->
        <view class="spread-body">
            <view class="draw-loading" wx:if="{{!finished}}">
                <view class="draw-mask"></view>
                <view class="spinner">
                    <view class="bounce"/>
                </view>
            </view>
            <view class="draw-panel">
                <drawimage
                    wx:if="{{loaded}}"
                    id="{{draw.id}}"
                    width="{{draw.width}}"
                    height="{{draw.height}}"
                    background="{{draw.background}}"
                    layers="{{draw.layers}}"
                    @toTempFile="handleToTempFile"></drawimage>
            </view>
        </view>
        <view class="spread-btn-group">
            <button class="spread-btn-item" @tap="handleShareFriend">分享给好友</button>
            <button class="spread-btn-item" @tap="handleShareMoments">分享到朋友圈</button>
        </view>
        <view class="spread-footer">
            <text class="text" @tap="triggleRule('1')">规则说明<text class="icon">&gt;</text></text>
        </view>
        <view class="spread-rule {{showRule?'':'hidden'}}">
            <view class="spread-mask" @tap="triggleRule('2')"></view>
            <view class="spread-modal">
                <view class="spread-modal-title">规则说明</view>
                <text class="spread-modal-close" @tap="triggleRule('2')"></text>
                <view class="spread-modal-desc">
                    <view class="title">第一步</view>
                    <view class="text">生成一个分享图</view>
                </view>
                <view class="spread-modal-desc">
                    <view class="title">第二步</view>
                    <view class="text">将分享图分享给好友或朋友圈</view>
                </view>
                <view class="spread-modal-desc">
                    <view class="title">第三步</view>
                    <view class="text">好友帮您分享可赚钱，同时给您带来海量流量</view>
                </view>
            </view>
        </view>
    </view>
</template>
<script>
    import wepy from 'wepy';
    import { getTmpFilePath, toast } from '../../utils';
    import { SPREAD_REDPACKET } from '../../utils/config';
    import { LOAD_SPREADRP_INFO } from '../../utils/url';
    import { get } from '../../utils/ajax';
    import { SendEventLog } from '../../utils/eventLog';

    export default class SpreadRedpacket extends wepy.page {
        config = {
            navigationBarTitleText: '58助力免费推广',
            disableScroll: true,
            usingComponents: {
                drawimage: 'miniprogram-drawimage',
            },
        }
        data = {
            finished: false, // 加载canvas会阻断线程，所以当加载完canvas后再进行查看规则和分享操作
            loaded: false, // 图片加载中
            isOpenWritePhotosAlbum: true, // 默认用户打开了访问相册权限
            showRule: false, // 是否隐藏规则
            draw: {
                id: 'spread-canvas',
                imageSrc: '',
                width: 560,
                height: 900,
                background: {},
                layers: [],
            },
        }
        async onLoad() {
            // 获取数据信息
            const mpId = wepy.getStorageSync('current_mpid');
            const { data } = await get(LOAD_SPREADRP_INFO, { mpId });
            const {
                card,
                comment,
                moment,
                momentQrcode,
            } = data;

            // 需要绘制所有图片
            let imgs = [
                Object.assign({
                    url: card.picImg,
                }, SPREAD_REDPACKET.header),
                Object.assign({
                    url: momentQrcode,
                }, SPREAD_REDPACKET.code),
            ];
            imgs = imgs.concat(moment.pics.splice(0, 4).map((item, index) => ({
                url: item,
                dx: 80 + (index * 150),
                dy: 430,
                dWidth: 140,
                dHeight: 140,
            })));

            // 需要绘制所有文字
            let texts = [
                Object.assign({
                    text: card.realName,
                }, SPREAD_REDPACKET.userName),
                Object.assign({
                    text: moment.moments,
                }, SPREAD_REDPACKET.moment),
            ];
            comment.splice(0, 2).forEach((item, index) => {
                const baseStyle = {
                    text: `${item.nickName}：`,
                    color: '#666',
                    lineHeight: 40,
                    fontSize: 24,
                    x: 100,
                    y: 620 + (index * 42),
                };
                // 名称和内容文字分开渲染
                texts = texts.concat([baseStyle, Object.assign({}, baseStyle, {
                    text: `${item.content}`,
                    color: '#333',
                    x: 100 + (item.nickName.length * 22) + 22,
                    maxWidth: 620 - ((item.nickName.length * 22) + 22),
                    ellipsis: true,
                })]);
            });

            await this.drawImgs(imgs);
            await this.drawTexts(texts);
            await this.drawBackground();

            this.loaded = true;
            this.$apply();
        }
        /**
         * 绘制背景图
         */
        async drawBackground() {
            const src = 'https://img.58cdn.com.cn/lbg/jianzhan/images/redpacket-bg.png';
            this.draw.background.dx = 0;
            this.draw.background.dy = 0;
            this.draw.background.dWidth = this.draw.width;
            this.draw.background.dHeight = this.draw.height;
            this.draw.background.imageResource = await getTmpFilePath(src);
        }
        /**
         * 绘制图片类型
         */
        async drawImgs(arr) {
            const tempImgs = [];
            let i;
            let imgItem;

            const tempImgsInfo = arr.map(async item => {
                // 为了获取其他信息，所以这里直接获取图片信息
                const imgInfo = await this.getImageInfo(`https://pic1.58cdn.com.cn/${item.url}`);
                return imgInfo;
            });
            for await (imgItem of tempImgsInfo) {
                tempImgs.push(imgItem);
            }
            for (i = 0; i < arr.length; i += 1) {
                this.scale(arr[i]);
                arr[i].type = 'image';
                arr[i].imageResource = tempImgs[i].path;
                arr[i].width = tempImgs[i].width;
                arr[i].height = tempImgs[i].height;
            }
            this.draw.layers = this.draw.layers.concat(arr);
        }
        /**
         * 绘制文字类型
         */
        drawTexts(arr) {
            arr.forEach(item => {
                this.scale(item);
                item.type = 'text';
            });
            this.draw.layers = this.draw.layers.concat(arr);
        }
        /**
         * 重置所有数值为560比例的
         */
        scale(obj) {
            Object.keys(obj).forEach(item => {
                if (item === 'lineClamp') return;
                obj[item] = typeof obj[item] === 'number' ? ~~((obj[item] * 560) / 750) : obj[item];
            });
        }
        async getImageInfo(src) {
            return new Promise((resolve, reject) => {
                wx.getImageInfo({
                    src,
                    success(res) {
                        resolve(res);
                    },
                    fail(err) {
                        reject(err);
                    },
                });
            });
        }
        methods = {
            /**
             * 规则显隐切换
             */
            triggleRule(type) {
                if (!this.finished) return;
                this.showRule = +type === 1;
                this.$apply();
            },
            /**
             * 绘制完成，保存地址
             */
            handleToTempFile(e) {
                const { tempFilePath } = e.detail;
                this.draw.imageSrc = tempFilePath;
                this.finished = true;
                this.$apply();
            },
            /**
             * 分享给好友
             */
            handleShareFriend() {
                if (!this.finished) return;
                const path = this.draw.imageSrc;
                if (!path) return;
                const duration = 1500;
                toast('长按图片发送给好友', duration);
                setTimeout(() => {
                    wepy.previewImage({
                        urls: [path],
                    });
                }, duration);
                this.methods.sendEventLog('redpacketShareFriend');
            },
            /**
             * 分享到朋友圈
             */
            async handleShareMoments() {
                if (!this.finished) return;
                const self = this;
                const path = this.draw.imageSrc;
                if (!path) return;

                if (!this.isOpenWritePhotosAlbum) {
                    try {
                        const res = await wepy.openSetting();
                        if (res && res.authSetting['scope.writePhotosAlbum'] === true) {
                            this.isOpenWritePhotosAlbum = true;
                            toast('授权已开启，请点击分享朋友圈按钮');
                        } else {
                            toast('您还未授权，图片无法保存到相册');
                        }
                    } catch (e) {
                        toast('授权失败，图片无法保存到相册，请稍后再试！');
                    }
                    return;
                }
                // 权限已开启，则保存
                wx.saveImageToPhotosAlbum({
                    filePath: path,
                    success() {
                        toast('图片已保存到相册，可将图片分享到朋友圈');
                    },
                    fail(err) {
                        const authFail = ['saveImageToPhotosAlbum:fail auth deny', 'saveImageToPhotosAlbum:fail:auth denied'];
                        if (authFail.indexOf(err.errMsg) > -1) {
                            toast('您拒绝了授权，图片无法保存到相册');
                            self.isOpenWritePhotosAlbum = false;
                        }
                    },
                });
                this.methods.sendEventLog('redpacketShareMoments');
            },
            /**
             * 埋点日志
             */
            sendEventLog(key) {
                // 点击行为的埋点
                SendEventLog({
                    page: 'activity/spreadRedpacket',
                    button: key || '',
                });
                // 分享行为的埋点
                SendEventLog({
                    page: 'activity/spreadRedpacket',
                    button: key || '',
                    action: 'share',
                });
            },
        }
    }
</script>
<style lang="scss">
    @import '../../css/drawLoading';
    @mixin bg($pic, $size: cover) {
        background: url('#{$requestPath}/#{$pic}.png') center no-repeat;
        background-size: $size;
    }
    @mixin fullpage($position: fixed) {
        position: $position;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
    }
    
    $requestPath: 'http://img.58cdn.com.cn/lbg/jianzhan/images';
    .spread-panel {
        @include fullpage();
        @include bg('spreadRd-share-bg');
    }
    .spread-body {
        position: relative;
        margin: 50rpx auto 0;
        width: 560rpx;
        height: 900rpx;
        background-color: #fff;
        @include bg('redpacket-bg');
    }
    .spread-btn-group {
        display: flex;
        justify-content: center;
        margin-top: 55rpx;
    }
    .spread-btn-item {
        padding: 0;
        width: 304rpx;
        height: 80rpx;
        font-size: 32rpx;
        line-height: 80rpx;
        text-align: center;
        color: #fff;
        @include bg('btn-rect-bg');
        & + .spread-btn-item {
            margin-left: 20rpx;
        }
    }
    .spread-footer {
        margin-top: 40rpx;
        font-size: 28rpx;
        text-align: center;
        color: #333;
        .icon {
            position: relative;
            top: -1rpx;
            margin-left: 6rpx;
        }
    }
    .spread-rule {
        z-index: 2;
        @include fullpage();
    }
    .spread-mask {
        @include fullpage(absolute);
        background: rgba(0, 0, 0, .7);
    }
    .spread-modal {
        position: relative;
        margin: 310rpx auto 0;
        padding: 34rpx 60rpx;
        width: 540rpx;
        height: 460rpx;
        color: #333;
        border-radius: 4rpx;
        background-color: #fff;
    }
    .spread-modal-close {
        position: absolute;
        top: 34rpx;
        right: 28rpx;
        width: 24rpx;
        height: 24rpx;
        @include bg('close', contain);
    }
    .spread-modal-title {
        padding-bottom: 32rpx;
        font-size: 32rpx;
        line-height: 45rpx;
        text-align: center;
    }
    .spread-modal-desc {
        margin-top: 30rpx;
        font-size: 28rpx;
        line-height: 40rpx;
        .title {
            float: left;
            width: 114rpx;
        }
        .text {
            padding-left: 114rpx;
            color: #666;
        }
    }
    .hidden {
        display: none;
    }
    .draw-panel {
        @include fullpage(absolute);
    }
    .draw-loading {
        background: transparent;
    }
    .draw-mask {
        position:absolute;
        top: 130rpx;
        bottom: 348rpx;
        left: 42rpx;
        right: 42rpx;
        background: #fff;
    }
</style>