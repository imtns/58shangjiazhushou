<template>
    <view class="myCardPrint">
        <view wx:if="{{showCanvas}}">
            <drawimage bind:toTempFile="toTempFile1" id="drawStyle1" width="750" height="368" background="{{cardOppStyle.background}}" layers="{{cardOppStyle.layers}}" />
            <button class="saveCard" bindtap="saveImgToPhotosAlbum(1)">下载名片（正面）</button>
            <drawimage bind:toTempFile="toTempFile2" id="drawStyle2" width="750" height="368" background="{{cardPosStyle.background}}" layers="{{cardPosStyle.layers}}" />
            <button class="saveCard" bindtap="saveImgToPhotosAlbum(2)">下载名片（反面）</button>
            <view class="print-tip">这是58为你特制的高科技名片哦，快下载后打印出来发送给好友，可获得特别商机哦</view>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import { CARD_FIRST_EDIT } from '../utils/url';
import { post, get } from '../utils/ajax';
import Mixin from '../mixin';
import { getTmpFilePath, alert } from '../utils/index';

export default class choseImageStyle extends wepy.page {
    mixins = [Mixin]
    config = {
        navigationBarTitleText: '名片打印',
        usingComponents: {
            drawimage: 'miniprogram-drawimage',
        },
    }
    data = {
        cardOppBg: '', // 名片正面背景
        cardPosBg: '', // 名片反面背景
        cardCodeImg: '', // 名片二维码转换图片
        showCanvas: false, // 是否展示名片
        cardOppImg: '', // 生成的名片正面图片
        cardPosImg: '', // 生成的名片反面图片
        cardOppStyle: {}, // 名片正面数据
        cardPosStyle: {}, // 名片反面数据
        cardId: '',
        isEmployee: false, // 判断是否是店长
    }
    methods = {
        // 下载名片
        async saveImgToPhotosAlbum(e) {
            console.log(e);
            let path = '';
            if (e == 1) {
                console.log('1121');
                path = this.cardOppImg;
            } else if (e == 2) {
                console.log('22222');
                path = this.cardPosImg;
            }
            console.log(path);
            wx.saveImageToPhotosAlbum({
                filePath: path,
                success (res) {
                    console.log(res);
                    alert('成功保存图片到相册');
                },
            });
        },
        toTempFile1(res) {
            const { tempFilePath } = res.detail;
            this.cardOppImg = tempFilePath;
            this.$apply();
            console.log(this.cardOppImg);
        },
        toTempFile2(res) {
            const { tempFilePath } = res.detail;
            this.cardPosImg = tempFilePath;
            this.$apply();
            console.log(this.cardPosImg);
        },
    };
    async onLoad () {
        console.log('onload');
    }
    async onShow () {
        wx.showLoading({
            title: '图片生成中',
        });
        const that = this;
        await that.loadData();
        await that.getCardCode();
        await that.touchImage();
        await that.drawimageStyle1();
        await that.drawimageStyle2();
    }
    async loadData() {
        let sendData;
        const currentMpid = wepy.getStorageSync('current_mpid');
        this.isEmployee = wepy.getStorageSync('isEmployee');
        if (wepy.getStorageSync('cardId')) {
            this.cardId = wepy.getStorageSync('cardId');
        }
        if (!currentMpid && !this.cardId) {
            return;
        }
        if (!this.isEmployee) {
            sendData = {
                mpId: currentMpid,
            };
        } else {
            sendData = {
                cardId: this.cardId,
            };
        }
        const { data } = await post(CARD_FIRST_EDIT, sendData);
        Object.assign(this, data);
        this.$apply();
    }
    async getCardCode() {
        const cardId = wepy.getStorageSync('current_cardId');
        const { data } = await get('/share2', {
            cardId,
            type: 'redPacket',
        });
        this.cardCodeImg = await getTmpFilePath(`https://pic1.58cdn.com.cn${data}`);
    }
    async drawimageStyle1() {
        const that = this;
        // 生成名片正面的数据
        this.cardOppStyle = {
            width: 586,
            height: 368,
            background: {
                imageResource: that.cardOppBg,
                dx: 82,
                dy: 0,
                dWidth: 586,
                dHeight: 368,
            },
            layers: [
                {
                    type: 'text', // 姓名text
                    textBaseline: 'top',
                    textAlign: 'left',
                    fontSize: 38,
                    text: that.realName,
                    x: 358,
                    y: 243,
                    color: '#fff',
                    lineHeight: '',
                    maxWidth: '200',
                    ellipsis: true,
                }, {
                    type: 'text', // 职位text
                    textBaseline: 'top',
                    textAlign: 'left',
                    fontSize: 21,
                    text: that.position,
                    x: 358,
                    y: 303,
                    color: '#fff',
                    lineHeight: '',
                    maxWidth: '460',
                }, {
                    type: 'image', // 二维码图片
                    imageResource: that.cardCodeImg,
                    dx: 523,
                    dy: 224,
                    dWidth: 112,
                    dHeight: 112,
                },
            ],
        };
        that.$apply();
    }
    async drawimageStyle2() {
        const that = this;
        // 生成名片反面的数据
        this.cardPosStyle = {
            width: 586,
            height: 368,
            background: {
                imageResource: that.cardPosBg,
                dx: 82,
                dy: 0,
                dWidth: 586,
                dHeight: 368,
            },
            layers: [
                {
                    type: 'text', // 电话text
                    textBaseline: 'top',
                    textAlign: 'left',
                    fontSize: 14,
                    text: `Tel : ${that.mobile}`,
                    x: 358,
                    y: 250,
                    color: '#F1B620',
                    lineHeight: '',
                    maxWidth: '460',
                }, {
                    type: 'text', // 微信text
                    textBaseline: 'top',
                    textAlign: 'left',
                    fontSize: 14,
                    text: `Wechat : ${that.wxCode}`,
                    x: 358,
                    y: 283,
                    color: '#F1B620',
                    lineHeight: '',
                    maxWidth: '460',
                }, {
                    type: 'text', // 地址text
                    textBaseline: 'top',
                    textAlign: 'left',
                    fontSize: 14,
                    text: `Add : ${that.address}`,
                    x: 358,
                    y: 317,
                    color: '#F1B620',
                    lineHeight: '',
                    maxWidth: '460',
                }, {
                    type: 'image', // 二维码图片
                    imageResource: that.cardCodeImg,
                    dx: 539,
                    dy: 47,
                    dWidth: 112,
                    dHeight: 112,
                },
            ],
        };
        wx.hideLoading();
        this.showCanvas = true;
        that.$apply();
    }
    async touchImage() {
        const cardOppBg = 'https://img.58cdn.com.cn/lbg/shangjiaxcxht/zhushou/card_opposite.png?32';
        const cardPosBg = 'https://img.58cdn.com.cn/lbg/shangjiaxcxht/zhushou/card_positive.png?32';
        // 转成本地路径
        this.cardOppBg = await getTmpFilePath(cardOppBg);
        this.cardPosBg = await getTmpFilePath(cardPosBg);
        this.$apply();
    }
}
</script>

<style lang="scss">
.myCardPrint{
    padding-top: 40rpx;
}
#drawStyle1,
#drawStyle2{
    margin:20rpx auto;
}
.saveCard{
    font-size: 32rpx;
    color: #fff;
    text-align: center;
    width: 586rpx;
    line-height: 94rpx;
    margin: 20rpx auto 40rpx;
    background: #4E88FF;
    border-radius: 4px;
}
.print-tip{
    font-size: 24rpx;
    color: #999;
    width:586rpx;
    margin:0 auto;
}
</style>
