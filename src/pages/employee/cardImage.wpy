<template>
    <view class="choseStyle">
        <swiper class="swiper-contain" indicator-dots="{{swiper.indicatorDots}}"
        autoplay="{{swiper.autoplay}}" interval="{{swiper.interval}}" duration="{{swiper.duration}}" bindchange="onSlideChangeEnd">
            <block wx:if="{{showCanvas}}">
                <swiper-item>
                    <drawimage bind:toTempFile="toTempFile1" id="drawStyle1" width="530" height="940" background="{{firstStyle.background}}" layers="{{firstStyle.layers}}" />
                </swiper-item>
                <swiper-item>
                    <drawimage bind:toTempFile="toTempFile2" id="drawStyle2" width="560" height="740" background="{{secondStyle.background}}" layers="{{secondStyle.layers}}" />
                </swiper-item>
            </block>
        </swiper>
        <button class="saveCard" bindtap="saveImgToPhotosAlbum">保存</button>
    </view>
</template>

<script>
import wepy from 'wepy';
import { EMPLOYEE_MPCARD_GET } from '../../utils/url';
import { get } from '../../utils/ajax';
import Mixin from '../../mixin';
import { firstStyle, secondStyle } from '../../utils/introData';
import { getTmpFilePath, alert } from '../../utils/index';
import { SendClickLog } from '../../utils/maidian';

export default class choseImageStyle extends wepy.page {
    mixins = [Mixin]
    config = {
        navigationBarTitleText: '选择图片样式',
        usingComponents: {
            drawimage: 'miniprogram-drawimage',
        },
    }
    data = {
        tmpLogo: '',
        tmpQrcode: '',
        headImg: '',
        mycardCode: '',
        showCanvas: false,
        serviceTagArr: [], // 服务标签数组
        styleImage1: '',
        styleImage2: '',
        style: 1,
        swiper: {
            indicatorDots: true,
            autoplay: false,
            interval: 2000,
            duration: 500,
        },
        firstStyle,
        secondStyle,
        cardId: '',
    }
    methods = {
        onSlideChangeEnd(e) {
            const { current } = e.detail;
            if (current && current === 1) {
                this.style = 2;
                this.$apply();
            }
            if (current === 0) {
                this.style = 1;
                this.$apply();
            }
        },
        // 下载名片
        async saveImgToPhotosAlbum() {
            SendClickLog('sjzh_click_employeeImage_download_btn');
            let path = '';
            if (this.style === 1) {
                path = this.styleImage1;
            } else if (this.style === 2) {
                path = this.styleImage2;
            }
            wx.saveImageToPhotosAlbum({
                filePath: path,
                success (res) {
                    console.log(res);
                    alert('成功保存图片到相册');
                },
            });
        },
        toTempFile1(res) {
            const { tempFilePath } = res.detail;
            this.styleImage1 = tempFilePath;
            this.$apply();
        },
        toTempFile2(res) {
            const { tempFilePath } = res.detail;
            this.styleImage2 = tempFilePath;
            this.$apply();
        },
    };
    async onLoad (option) {
        const { cardId } = option;
        this.cardId = cardId;
        this.$apply();
    }
    async onShow () {
        wx.showLoading({
            title: '图片生成中',
        });
        const that = this;
        await that.loadData();
        await that.touchImage();
        await that.drawTags();
        await that.cardCode();
        await that.drawimageStyle1();
        await that.drawimageStyle2();
    }
    async loadData() {
        try {
            const { data } = await get(EMPLOYEE_MPCARD_GET, {
                mpcardId: this.cardId,
            });
            console.log(data);
            Object.assign(this, data);
            this.serviceTagArr = this.tags.split(',');
            this.headImg = `https://pic1.58cdn.com.cn${this.picUrl}`;
            this.$apply();
        } catch (err) {
            console.log(err);
        }
    }
    async drawimageStyle1() {
        const that = this;
        const { layers } = this.firstStyle;
        this.firstStyle.background = {
            imageResource: that.tmpLogo,
            dx: 0,
            dy: 0,
            dWidth: 530,
            dHeight: 940,
        };
        this.firstStyle.layers = [
            {
                type: 'image', // 背景图片
                imageResource: that.tmpQrcode,
                dx: 35,
                dy: 35,
                dWidth: 460,
                dHeight: 870,
            },
            {
                type: 'image', // 头像图片
                imageResource: that.headImg,
                dx: 212,
                dy: 120,
                dWidth: 106,
                dHeight: 106,
                radius: 106,
            },
            {
                type: 'text', // 姓名text
                textBaseline: 'top',
                textAlign: 'center',
                fontSize: 39,
                text: that.realName,
                x: 265,
                y: 240,
                color: '#333',
                maxWidth: '460',
            },
            {
                type: 'text', // 职位text
                textBaseline: 'top',
                textAlign: 'center',
                fontSize: 24,
                text: that.position,
                x: 265,
                y: 300,
                color: '#fff',
                maxWidth: 750,
                radius: 4,
                bgColor: '#4E88FF',
                padding: '3 15 3 15',
                lineHeight: 32,
            },
            {
                type: 'text', // 公司名称text
                textBaseline: 'top',
                textAlign: 'center',
                fontSize: 24,
                text: that.company,
                x: 265,
                y: 350,
                color: '#666',
                maxWidth: '460',
            },
            {
                type: 'text', // 个性签名text
                textBaseline: 'top',
                textAlign: 'center',
                fontSize: 24,
                text: that.sign || '没有个性签名',
                x: 265,
                y: 390,
                color: '#999',
                lineHeight: '24',
                maxWidth: '460',
            },
            {
                type: 'text', // 手机号text
                textBaseline: 'top',
                textAlign: 'right',
                fontSize: 24,
                text: that.mobile,
                x: 470,
                y: 507,
                color: '#333',
                lineHeight: '24',
                maxWidth: '260',
            },
            {
                type: 'text', // 微信号text
                textBaseline: 'top',
                textAlign: 'right',
                fontSize: 24,
                text: that.wxCode,
                x: 470,
                y: 565,
                color: '#333',
                lineHeight: '32',
                maxWidth: '260',
            },
            {
                type: 'text', // 联系地址text
                textBaseline: 'top',
                textAlign: 'right',
                fontSize: 24,
                text: that.address,
                x: 470,
                y: 618,
                color: '#333',
                lineHeight: '32',
                maxWidth: '270',
            },
            {
                type: 'image', // 二维码图片
                imageResource: that.mycardCode,
                dx: 70,
                dy: 710,
                dWidth: 140,
                dHeight: 140,
            },
        ].concat(layers);
        that.$apply();
    }
    async drawimageStyle2() {
        const that = this;
        // 转成本地路径
        const { layers } = this.secondStyle;
        this.secondStyle.layers = [
            {
                type: 'color', // 颜色
                start: [0, 0, 561, 741], // Array [x0, y0, x1, y1]
                end: [0, 0, 561, 741], // Array [x, y, width, height]
                colorStop: [[1, 'white']], // Array [stop, color]
                shape: 'Linear', // Linear || Circular
            },
            {
                type: 'image', // 头像图片
                imageResource: that.headImg,
                dx: 34,
                dy: 34,
                dWidth: 106,
                dHeight: 106,
            },
            {
                type: 'text', // 姓名text
                textBaseline: 'top',
                textAlign: 'left',
                fontSize: 39,
                text: that.realName,
                x: 165,
                y: 36,
                color: '#333',
                lineHeight: '',
                maxWidth: '460',
            },
            {
                type: 'text', // 公司名称text
                textBaseline: 'top',
                textAlign: 'left',
                fontSize: 24,
                text: that.company,
                x: 165,
                y: 107,
                color: '#666',
                lineHeight: '',
                maxWidth: '460',
            },
            {
                type: 'image', // 二维码图片
                imageResource: that.mycardCode,
                dx: 75,
                dy: 200,
                dWidth: 410,
                dHeight: 410,
            },
            {
                type: 'text', // 个性签名text
                textBaseline: 'top',
                textAlign: 'center',
                fontSize: 24,
                text: '长按识别二维码，马上和我微聊',
                x: 270,
                y: 645,
                color: '#999',
                lineHeight: '24',
                maxWidth: '460',
            },
        ].concat(layers);
        wx.hideLoading();
        this.showCanvas = true;
        that.$apply();
    }
    async drawTags() {
        // 多标签
        const bgWidth = 500; // 画布的宽度
        const tags = this.serviceTagArr;
        const TAG_CONTAINER_LEN = 400; // 标签容器宽度
        const FONT_SIZE = 24; // 字体大小
        const COLOR = '#F5A623';
        const TAG_PADDING = 10;
        const TAG_MARGIN = 10;
        const tagsArr = [[]]; // 标签分行数据
        const baseLen = (TAG_PADDING * 2) + (TAG_MARGIN * 2);
        // const totalLen = tags.length * ((TAG_PADDING * 2) + (TAG_MARGIN * 2)) + tags.join('').length * FONT_SIZE;
        let totalLen = 0;
        let tagsArrIdx = 0;
        tags.forEach(tag => {
            const len = baseLen + (tag.length * FONT_SIZE);
            totalLen += len;
            if (totalLen > TAG_CONTAINER_LEN) {
                // 换行，重新计算长度
                totalLen = len;
                tagsArrIdx += 1;
                tagsArr[tagsArrIdx] = [tag];
            } else {
                tagsArr[tagsArrIdx].push(tag);
            }
        });
        const { layers } = this.firstStyle;
        // 根据分层数据重新计算每个text的坐标
        tagsArr.forEach((arr, i) => {
            // 每行文字的总长度
            const len0 = (arr.length * baseLen) + (arr.join('').length * FONT_SIZE);
            const startX = (bgWidth - len0) / 2;
            arr.reduce((preLen, curTag) => {
                const len1 = (curTag.length * FONT_SIZE) + baseLen; // 每个标签的宽度
                const x = startX + preLen + (len1 / 2);
                layers.push({
                    type: 'text', // 文本
                    textAlign: 'center',
                    fontSize: FONT_SIZE,
                    text: curTag,
                    x,
                    y: (i * 30) + 435,
                    color: COLOR,
                    lineHeight: 24,
                    maxWidth: 300,
                    textBaseline: 'top',
                });
                // 返回当前总长度
                return preLen + len1;
            }, 0);
        });
        this.firstStyle.layers = layers;
    }
    async touchImage() {
        const cardStyleBoxBg = 'https://img.58cdn.com.cn/lbg/shangjiaxcxht/zhushou/card_chosestyle_box_bg.png';
        const cardStyleBg = 'https://img.58cdn.com.cn/lbg/shangjiaxcxht/zhushou/card_style_bg.png';
        // 转成本地路径
        this.tmpLogo = await getTmpFilePath(cardStyleBg);
        this.tmpQrcode = await getTmpFilePath(cardStyleBoxBg);
        this.headImg = await getTmpFilePath(this.headImg);
        this.$apply();
    }
    async cardCode() {
        const that = this;
        const cardId = this.cardId || wepy.getStorageSync('current_cardId');
        try {
            const { data } = await get('/share', {
                path: 'pages/index/index',
                sceneId: `card_${cardId}`,
                cardId,
            });
            const { url } = data;
            that.mycardCode = await getTmpFilePath(url);
            that.$apply();
        } catch (err) {
            console.log(err);
        }
    }
}
</script>

<style lang="scss">
.swiper-contain{
    width: 100%;
    height: 1100rpx;
}
#drawStyle1{
    width: 530rpx;
    height: 940rpx;
    position: absolute;
    left: 110rpx;
    top:50rpx;
}
#drawStyle2{
    position: absolute;
    left: 95rpx;
    top:150rpx;
}
.choseStyle{
    background: rgba(0, 0, 0, .7);
    background-size: 100%;
    height: 100vh;
}
.saveCard{
    font-size: 32rpx;
    color: #333;
    background: #FFF;
    border-radius: 4rpx;
    text-align: center;
    position: absolute;
    bottom: 40rpx;
    left: 30rpx;
    right: 30rpx;
    z-index: 9;
}

</style>
