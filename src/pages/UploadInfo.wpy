<template>
    <view class="uploadInfo">
        <view class="article">
            <view class="title" @tap="bindUploadText">
                <view class="text">文本内容</view>
                <view class="action">点击上传文本</view>
            </view>
            <view class="inputArea">
                <textarea placeholder="请输入" @input="setText" maxLength="100" placeholder-style="font-size: 28rpx;color: #BDBDBD;"/>
                <view class="numTip">{{form.text.length||0}}/100</view>
            </view>
        </view>
        <!-- <view class="main-body">
            <view class="main-title">上传图片</view>
            <view class="main-boy-line main-body-flex">
                <view class="main-upload"></view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
            </view>
        </view> -->
        <imageuploader @changeimages.user="setImages" :maxSize="maxImageSize" uploadtype="1"></imageuploader>
        <view class="main-title">注：最多上传10张，大小不超过4M</view>
        <!-- <view class="main-body">
        <view class="main-title">上传视频</view>
            <view class="main-boy-line main-body-flex">
                <view class="main-upload"></view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
            </view>
        </view> -->
        <videouploader @changeimages.user="setVideo" :maxSize="maxVideoSize" uploadtype="2"></videouploader>
        <view class="main-title">注：最多上传5个，大小不超过200M</view>
        <view class="main-body">
            <view class="main-boy-line">
                <view class="main-body-text" style="color:#ccc; font-size:30rpx;">文章</view>
                <navigator url="/pages/UploadArticle?mpid={{form.mpid}}"><view class="addArticle">+上传新文章</view></navigator>
            </view>
        </view>
        <block wx:for="{{form.articles}}" wx:key="index">
            <view class="main-body">
                <view class="main-boy-line">
                    <view class="main-body-text" style="color:#333; font-size:30rpx;">{{item.name}}</view>
                </view>
            </view>
        </block>
        
        <view class="main-button" @tap="submitSave">完成</view>
    </view>
</template>

<script>
import wepy from 'wepy';

import { sleep, toast, alert } from '../utils';
import { get, post } from '../utils/ajax';
import UploadFile from '../components/UploadFile';

const complateApi = '/resource/complete';
const uploadText = '/resource/upload/text';
const getArticles = '/resource/articleList';
const saveUpload = '/businessResource/insert'; // resourceType  1图片  2视频     resourceUrl  调用/fileUpload之后返回的url   resourceName资源名称

export default class UploadInfo extends wepy.page {
    config = {
        navigationBarTitleText: '上传素材',
    }
    components = {
        imageuploader: UploadFile,
        videouploader: UploadFile,
    }
    data = {
        maxImageSize: 3,
        maxVideoSize: 2,
        form: {
            text: 0,
            images: [],
            videos: [],
        },
    }
    async getArticles () {
        const res = await get(getArticles);
        this.updateForm({ articles: res.data });
    }
    methods = {
        setText (e) {
            const text = e.detail.value;
            this.updateForm({ text });
        },
        async setImages ({ uploading, images = [] }) {
            this.updateForm({ uploading });
            if (uploading || images.length === 0) return;
            const sendData = { resourceType: 1, resourceUrl: images[images.length - 1], resourceName: '' };
            const res = await get(saveUpload, sendData);
            const { state, msg } = res;
            if (state === 100) {
                this.updateForm({ images });
            } else {
                toast(msg);
            }
        },
        async setVideo ({ uploading, images = [] }) {
            this.updateForm({ uploading });
            if (uploading) return;
            const sendData = { resourceType: 2, resourceUrl: images[images.length - 1], resourceName: '' };
            const res = await get(saveUpload, sendData);
            const { state, msg } = res;
            if (state === 100) {
                this.updateForm({ videos: images });
            } else {
                toast(msg);
            }
        },
        async bindUploadText () {
            const { text } = this.form;
            if (!text) {
                toast('文本内容不能为空');
                return;
            }
            const { state, msg } = await get(uploadText, { text });
            if (state === 100) {
                alert('文本上传成功');
                this.updateForm({ text: this.text += 1 });
            } else {
                toast(msg);
            }
        },
        async submitSave () {
            if (!this.enable) return;
            const url = '/pages/UploadInfoSuccess/UploadInfoSuccess';
            const res = await post(complateApi, { mpid: this.mpid });
            if (res.state === 100) {
                wepy.navigateTo({
                    url,
                });
            }
        },
    }
    async insertFile (resourceType, resourceUrl) {
        const sendData = { resourceType, resourceUrl, resourceName: '' };
        return get(saveUpload, sendData);
    }
    updateForm (data) {
        const enable = this.form.text && this.form.images && this.videos;
        this.form = Object.assign({}, this.form, { enable }, data);
        this.$apply();
    }
    verify () {
        const {
            text, images, videos, articles,
        } = this.form;
        return text > 0 || images.length > 0 || videos.length > 0 || articles.length > 0;
    }
    async onLoad (options) {
        await sleep();
        const mpid = options.mpid || wepy.getStorageSync('current_mpid');
        this.updateForm({ mpid });
    }
    async onShow () {
        await this.getArticles();
    }
    onUnload () {
        wepy.removeStorageSycn('articles');
    }
}
</script>

<style lang="scss">
@import '../css/regist.scss';
.uploadInfo {
    padding-bottom: 70rpx;
    .article {
        padding: 30rpx;
        background: white;
        margin-bottom: 20rpx;
        border-top: 1rpx solid #e7e7e7;
        .title {
            height: 86rpx;
            line-height: 86rpx;
            display: flex;
            justify-content: space-between;
            .text {
                font-size: 30rpx;
                color: #999999;
            }
            .action {
                font-size: 30rpx;
                color: #4e88ff;
            }
        }
        .inputArea {
            textarea {
                width: 100%;
                height: 202rpx;
            }
            .numTip {
                padding-top: 20rpx;
                font-size: 24rpx;
                color: #cccccc;
                text-align: right;
            }
        }
    }
}
</style>