<template>
    <view class="uploadInfo">
        <view class="article">
            <view class="title" @tap="bindUploadText">
                <view class="text">文本内容</view>
                <view class="action">点击上传文本</view>
            </view>
            <view class="inputArea">
                <textarea placeholder="请输入" @input="setText" maxLength="100" placeholder-style="font-size: 28rpx;color: #BDBDBD;"/>
                <view class="numTip">{{form.text.length||0}}/100</view>
            </view>
        </view>
        <!-- <view class="main-body">
            <view class="main-title">上传图片</view>
            <view class="main-boy-line main-body-flex">
                <view class="main-upload"></view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
            </view>
        </view> -->
        <imageuploader @changeimages.user="setImages" maxCount="10" maxSize="4"
         uploadtype="1" :showDelete="showImageDelete"></imageuploader>
        <view class="main-title">注：最多上传10张，大小不超过4M</view>
        <!-- <view class="main-body">
        <view class="main-title">上传视频</view>
            <view class="main-boy-line main-body-flex">
                <view class="main-upload"></view>
                <view class="main-show-image">
                    <image class="main-upload-image" src=""/>
                    <view class="main-del-image"></view>
                </view>
            </view>
        </view> -->
        <videouploader @changeimages.user="setVideo" maxCount="5" maxSize="200"
         uploadtype="2" :showDelete="showVideoDelete"></videouploader>
        <view class="main-title">注：最多上传5个，大小不超过200M</view>
        <view class="main-body">
            <view class="main-boy-line">
                <view class="main-body-text" style="color:#ccc; font-size:30rpx;">文章</view>
                <navigator url="/pages/UploadArticle?mpid={{form.mpid}}"><view class="addArticle">+上传新文章</view></navigator>
            </view>
        </view>
        <repeat for="{{form.articles}}">
            <view class="main-body">
                <view class="main-boy-line">
                    <view class="main-body-text" style="color:#333; font-size:30rpx;">{{item.title}}</view>
                </view>
            </view>
        </repeat>
        
        <view class="main-button {{form.enable?'':'main-button-disable'}}" @tap="submitSave">完成</view>
    </view>
</template>

<script>
import wepy from 'wepy';

import { sleep, toast, alert, filteremoji } from '../utils';
import { get, post } from '../utils/ajaxP';
import UploadFile from '../components/UploadFile';
import Mixin from '../mixin';

const complateApi = '/resource/complete';
const uploadText = '/resource/upload/text';
const getArticles = '/resource/articleList';
const saveUpload = '/businessResource/insert'; // resourceType  1图片  2视频     resourceUrl  调用/fileUpload之后返回的url   resourceName资源名称

export default class UploadInfo extends wepy.page {
    mixins = [Mixin]
    config = {
        navigationBarTitleText: '上传素材',
    }
    components = {
        imageuploader: UploadFile,
        videouploader: UploadFile,
    }
    data = {
        showImageDelete: false,
        showVideoDelete: false,
        form: {
            textSize: 0,
            text: '',
            images: [],
            videos: [],
            articles: [],
        },
    }
    async getArticles () {
        const [e, articles = []] = await get(getArticles);
        if (e) {
            toast(e);
            return;
        }
        console.log('articles', articles);
        this.updateForm({ articles: articles || [] });
    }
    methods = {
        setText (e) {
            let text = e.detail.value;
            text = filteremoji(text);
            this.updateForm({ text });
            return {
                value: text,
            };
        },
        async setImages ({ uploading, images = [] }) {
            this.updateForm({ uploading });
            if (uploading || images.length === 0) return;
            const sendData = { resourceType: 1, resourceUrl: images[images.length - 1], resourceName: '' };
            const [e] = await get(saveUpload, sendData, false);
            if (e) {
                toast(e);
            } else {
                this.updateForm({ images });
            }
        },
        async setVideo ({ uploading, images = [] }) {
            this.updateForm({ uploading });
            if (uploading) return;
            const sendData = { resourceType: 2, resourceUrl: images[images.length - 1], resourceName: '' };
            const [e] = await get(saveUpload, sendData);
            if (e) {
                toast(e);
            } else {
                this.updateForm({ videos: images });
            }
        },
        async bindUploadText () {
            const { text } = this.form;
            if (!text) {
                toast('文本内容不能为空');
                return;
            }
            const [e] = await get(uploadText, { text });
            if (e) {
                toast(e);
            } else {
                alert('文本上传成功');
                this.updateForm({ textSize: this.form.textSize += 1 });
            }
        },
        async submitSave () {
            if (!this.form.enable) return;
            const url = '/pages/UploadInfoSuccess';
            const [e] = await post(complateApi, { mpid: this.form.mpid });
            if (e) {
                toast(e);
                return;
            }
            wepy.redirectTo({
                url,
            });
        },
    }
    updateForm (data) {
        this.form = Object.assign({}, this.form, data);
        const enable = !!(this.form.textSize || this.form.images.length
            || this.form.videos.length || this.form.articles.length);
        this.form = Object.assign({}, this.form, { enable });
        console.log('form', this.form);
        this.$apply();
    }
    verify () {
        const {
            text, images, videos, articles,
        } = this.form;
        return text > 0 || images.length > 0 || videos.length > 0 || articles.length > 0;
    }
    async onLoad (options) {
        await sleep();
        const mpid = options.mpid || wepy.getStorageSync('current_mpid');
        this.updateForm({ mpid });
    }
    async onShow () {
        await this.getArticles();
    }
}
</script>

<style lang="scss">
@import '../css/regist.scss';
.uploadInfo {
    padding-bottom: 30rpx;
    .article {
        padding: 30rpx;
        background: white;
        margin-bottom: 20rpx;
        border-top: 1rpx solid #e7e7e7;
        .title {
            height: 86rpx;
            line-height: 86rpx;
            display: flex;
            justify-content: space-between;
            .text {
                font-size: 30rpx;
                color: #999999;
            }
            .action {
                font-size: 30rpx;
                color: #4e88ff;
            }
        }
        .inputArea {
            textarea {
                width: 100%;
                height: 202rpx;
            }
            .numTip {
                padding-top: 20rpx;
                font-size: 24rpx;
                color: #cccccc;
                text-align: right;
            }
        }
    }
    .main-body {
        padding: 23rpx 30rpx 0;
        background: #fff;
        position: relative;
        .main-boy-line {
            border-bottom: 1rpx solid #eeeeee;
            padding-bottom: 23rpx;
            position: relative;
        }
        .main-body-title {
            font-size: 26rpx;
            color: #999999;
            margin-bottom: 16rpx;
        }
    }
    .main-button {
        margin: 60rpx auto 0;
    }
    .main-button-disable {
        background: #ccc;
    }
}
</style>