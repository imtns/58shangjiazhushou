<template>
<view class="openpay-container">
    <!-- 开通支付 -->
    <view class="openpay" wx:if="{{!opened}}">
        <view>请用微信绑定手机号与58账号手机号相同的微信进行验证</view>
        <!-- 同意协议 -->
        <view class="openpay-protocol">
            <view class="openpay-protocol-agree {{agreeProtocol?'':'openpay-protocol-disagree'}}"
                @tap="bindAgreeProtocol">您已阅读并同意</view>
            <view class="paydetail-authorize-protocol" 
                @tap="bindShowProtocol({{true}})">《同城优选服务使用协议》</view>
        </view>
        <!-- 跳转到支付助手小程序性开通支付 -->
        <!-- 小程序跳转时低版本不提供url会报错 -->
        <navigator open-type="navigate"
            target="miniProgram"
            path="/pages/payAuthorize/payAuthorize?param={{userid}}" 
            url="/pages/payAuthorize/payAuthorize"  
            app-id="{{payAppId}}"
            version="develop">
            <view class="openpay-confirm">确认开通</view>
        </navigator>
        <!-- 协议内容 -->
        <view class="openpay-protocol-mask" wx:if="{{showProtocol}}"
         catchtouchmove="stopAuthorizeScroll" @tap="bindShowProtocol({{false}})">
        </view>
        <view class="openpay-protocol-container" wx:if="{{showProtocol}}">
            <view class="openpay-protocol-title" 
                @tap="bindShowProtocol({{false}})">同城优选服务使用协议</view>
            <view class="openpay-protocol-content">
                <view class="openpay-protocol-content-paragraph">《同城优选服务使用协议》（以下简称“本协议”）是同城优选服务提供者五八同城信息技术有限公司（以下简称“本公司”）与用户（以下简称“您”）订立的有效合约。</view>
                <view class="openpay-protocol-content-paragraph">本协议是《58同城使用协议》(http://about.58.com/home/announcement.html)、58同城隐私权条款（http://about.58.com/395.html）、双方已签署的《58同城网络服务单》和《58同城网络服务通用条款》及所有本公司已经发布的或将来可能发布的各类规则（以下简称“原协议”）的补充协议。特别提醒：请您务必认真阅读和理解本协议中规定的所有条款，特别是以粗体或下划线标注的条款。您需要理解并同意以下条款所述事项才能享受同城优选服务。</view>
                <view>1. 同城优选服务是指您可通过本公司在微信上开通的小程序平台发布您的商品和服务的信息、参加本公司平台活动、使用其他信息服务及技术服务、以及根据您的委托代为收取其他用户应向您支付的服务费用等。为改善用户体验或经营需要，本公司服务的项目和内容可能会不时调整。</view>
                <view>2. 您承诺不为任何非法目的或以任何非法方式使用本服务，也不将本服务用于法律、法规禁止或限制持有或交易物品的交易，亦不得涉嫌实施或实施洗钱、套现或进行传销活动。</view>
                <view>3. 本公司仅提供本服务，并不参与具体的商品或服务交易，您使用本服务时，因商品或服务交易本身所产生的任何纠纷或责任应由您自行解决或承担。</view>
                <view>4. 您在使用本协议约定服务时，还应一并遵守微信相关服务协议及使用规则，如因您违反微信相关服务协议及使用规则而导致微信暂停或终止向您提供服务而造成的一切损失由您自行承担。</view>
                <view>5. 如果在双方合作期间内，由于监管政策、第三方公司产品模式及服务内容变化导致任何一方无法继续履行其在本协议项下的义务，则任何一方有权随时解除本协议，而无需承担任何责任。</view>
                <view>6. 本协议未尽事宜，参照原协议执行；原协议与本协议有冲突的，以本协议为准。</view>
            </view>
        </view>
    </view>
    <!-- 更换收款微信 -->
    <view class="changepay" wx:else>
        <view>当前小程序已开通支付</view>
        <view>您现在可以使用买单功能</view>
        <!-- 跳转支付助手更换收款微信 -->
        <navigator open-type="navigate"
            target="miniProgram"
            path="/pages/payAuthorize/payAuthorize?param={{userid}}" 
            url="/pages/payAuthorize/payAuthorize"  
            app-id="{{payAppId}}"
            version="develop">
            <view class="openpay-confirm">更换收款微信</view>
        </navigator>
    </view>
</view>
</template>
<script>
import wepy from 'wepy';
import { toast } from '../utils';
import { get } from '../utils/ajaxP';

const appinfoApi = '/mplogic/get';

export default class OpenPay extends wepy.page {
    config = {}
    data = {
        payAppId: 'wx67b75e86c9daef45', // 开通支付小程序ID
        userid: '', // 开通支付必填
        opened: false, // 是否已经开通支付
        agreeProtocol: true, // 是否同意协议
        showProtocol: false, // 显示协议内容
    }
    methods = {
        bindAgreeProtocol () {
            this.agreeProtocol = !this.agreeProtocol;
        },
        bindShowProtocol (showProtocol) {
            this.showProtocol = showProtocol;
        },
        stopAuthorizeScroll () {
            // 阻止滚动事件穿透
            console.log('stopAuthorizeScroll');
        },
    }
    async onLoad (options) {
        const mpid = options.mpid || wepy.getStorageSync('current_mpid');
        await this.getOpenedInfo(mpid);
    }
    async getOpenedInfo (mpid) {
        // 获取用户是否开通支付
        // if更改支收款微信
        // else开通支付
        const [e, res] = await get(`${appinfoApi}/${mpid}`);
        if (e) {
            toast(e);
            return;
        }
        this.opened = res.protocol === 1;
    }
}
</script>
<style lang="scss">
/* 协议内容 */
.openpay-protocol-mask {
    width: 100vw;
    height: 100vh;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 99;
    background: rgba(0, 0, 0, 0.5);
}
.openpay-protocol-container {
    box-sizing: border-box;
    width: 650rpx;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 100;
    background: #fff;
    border-radius: 8rpx;
    padding: 20rpx 40rpx 60rpx;

    .openpay-protocol-title {
        font-family: PingFangSC-Semibold;
        font-size: 32rpx;
        color: #333;
        text-align: center;
    }
    .openpay-protocol-title::after {
        position: relative;
        left: 180rpx;
        display: inline-block;
        font-family: 'iconfont';
        content: '\e69a';
        font-size: 36rpx;
    }
    .openpay-protocol-content {
        height: 800rpx;
        line-height: 40rpx;
        margin-top: 20rpx;
        font-size: 28rpx;
        word-break: break-all;
        overflow-y: scroll;
        overflow-x: hidden;
        letter-spacing: 1rpx;
        -webkit-overflow-scrolling: touch;
        color: #999;
        background: #f6f6f6;
    }
    .openpay-protocol-content-paragraph {
        text-indent: 2em;
    }
}
</style>