<template>
    <view class="orderlist" wx:if="{{userLogin}}">
        <tabs></tabs>
        <view class="listWrapper">
            <block wx:if="{{orderType === 'product'}}">
                <productOrder :orderList.sync="orderList"  :statusSet="statusSet" :noOrder.sync="noOrder" :noMore.sync="noMore"></productOrder>
            </block>
            <block wx:if="{{orderType === 'service'}}">
                <serviceOrder :orderList.sync="orderList" :noOrder.sync="noOrder" :noMore.sync="noMore"></serviceOrder>
            </block>
        </view>
    </view>
    <view class="orderlist" wx:else>
        <nologin></nologin>
    </view>
</template>
<script>
import wepy from 'wepy';
import Tabs from '../components/order/tabs';
import NoLogin from '../components/NoLogin';
import ProductOrder from '../components/order/productOrder';
import ServiceOrder from '../components/order/serviceOrder';
import { globalData } from '../utils/globalData';
import { getUid, SendClickLog } from '../utils/maidian';
import mixin from '../components/order/mixin';

export default class OrderList extends wepy.page {
    mixins = [mixin];
    config = {
        navigationBarTitleText: '订单管理',
    };
    components = {
        tabs: Tabs,
        nologin: NoLogin,
        productOrder: ProductOrder,
        serviceOrder: ServiceOrder,
    };
    data = {
        orderType: 'service',
        status: '',
        userLogin: true,
    };
    events = {
        switchType: async (type) => {
            this.status = '';
            this.orderType = type;
            this.orderList = [];
            this.noOrder = false;
            this.sendParams.pageNum = 1;
            await this.getOrderList(type, '');
            this.$apply();
            // this.filterOrder('');
        },
        async getStatus(id) {
            this.status = id;
            this.orderList = [];
            this.sendParams.pageNum = 1;
            this.noOrder = false;
            await this.getOrderList(this.orderType, id);
            this.$apply();
            // this.filterOrder(id);
        },
    };
    async onShow() {
        if (!globalData.userLogin) {
            this.userLogin = false;
            this.$apply();
            return;
        }
        SendClickLog(
            'wxf03e52adc4b13448',
            getUid(),
            '{}',
            'sjzh_click_orderList_onload',
        );
        this.orderList = [];
        this.sendParams.pageNum = 1;
        await this.getOrderList(this.orderType, this.status);
    }
    onLoad() {
        console.log('onload');
    }
}
</script>
<style lang="scss">
.orderlist {
    font-family: PingFangSC-Regular;
    .listWrapper {
        margin-top: 176rpx;
        background: #f3f3f3;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 99;
    }
}
.order-list-nomore {
    margin-bottom: 20rpx;
    font-size: 28rpx;
    color: #999999;
    text-align: center;
}
</style>
